# Reflections Lesson 3

## When would you want to use a remote repository rather than keeping all your work local?
Remote repositories work well in cases where I want to either collaborate with other developers, or I want to work on one repository from different computers. In both cases, having the repository stored on GitHub ensures that several people (or computers) can make changes to the repository. Another useful side-effect is of course that the repository is still accessible in cases of hardware failure or theft.

## Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
When collaborating with other developers, it might be risky to automatically have changes pushed automatically, e.g. while working locally on the same feature, and their changes could break my current work.

## Describe the differences between forks, clones, and branches.  When would you use one instead of another?

| Concept   | Description                                        | Usage                                                                                                                     | Additional information                                                                              |
|-----------|----------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------|
| Branching | Creates a pointer to identify a set of commits     | Working on a new feature while keeping a working main/official version of your code                                       | [Branching in a nutshell](https://www.git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell)  |
| Cloning   | Creates a local copy of a remote repository        | Contributing to a repository created by someone else, or working on your own repository locally while keeping an online copy | [Cloning a repository](https://help.github.com/articles/cloning-a-repository/)                   |
| Forking   | Creates an online copy of a remote repository      | allows you to freely experiment with changes without affecting the original project                                       | [Forking a repository](https://help.github.com/articles/fork-a-repo/)                               |

## What is the benefit of having a copy of the last known state of the remote stored locally?
Being able to work off the last known state of a remote repository minimizes the risk of running into merge conflicts due to changes from different contributors.

## How would you collaborate without using Git or GitHub?  What would be easier, and what would be harder?
| Easier                                                                     | Harder                                        |
|----------------------------------------------------------------------------|-----------------------------------------------|
| changes can be done faster by saving or even autosaving file changes       | working on the same feature simultaneously    |
| not having to preserve complete version history saves hard disk space      | reviewing code changes made by others         |
| allows for changes to be made in secret, without full traceability         | restoring older versions any time             |
|                                                                            | working almost completely offline             |


## When would you want to make changes in a separate branch rather than directly in master?  What benefits does each approach have?

Using a separate branch makes still a lot of sense when working on features or other code changes that will require at least several commits until they result in a meaningful experience. In order to not block others working on the same repository, a branch can help.
